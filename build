#!/usr/bin/env bash

fail()
{
    local message=${1:-"Something went wrong!"}
    echo $message
    exit 1
}

usage()
{
    cat <<EOF
Usage: build [options]

Options:

    --prefix <prefix>       Installation prefix for LALSuite.
    -c, --c                 Build C modules.
    -p, --python            Build Python modules.
    -s, --src <src-dir>     Build from <src-dir>.
    -n, -nprocs <n>         Number of build processes to spawn.
    -h, --help              Display this help message.
EOF
    exit 0
}

prog=$(basename "$0")
options=$(getopt --name "$prog" --options hcps:n --longoptions help,c,python,prefix:,src:,nprocs -- $@ 2> /dev/null) || fail "Couldn't parse options."
eval set -- "$options"
while [[ $# > 0 ]]; do
    case "$1" in
        --prefix)
            prefix=$2
            shift;;
        -c | --c)
            buildc=true;;
        -p | --python)
            buildpython=true;;
        -s | --src)
            srcdir=$2
            shift;;
        -n | --nprocs)
            nprocs=$2
            shift;;
        --cc)
            cc=$2
            shift;;
        --flags)
            flags=$2
            shift;;
        -h | --help)
            usage;;
        --)
            shift
            break;;
    esac
    shift
done

set -e

# Check source directory and prefix.
[[ -z $prefix ]] && fail "Prefix not specified!"
[[ ! -d $srcdir ]] && fail "Invalid source directory!"
srcdir=$(readlink -f $srcdir)

# Remember script directory.
scriptdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

#BRANCHNAME=$(basename $(git symbolic-ref HEAD))
#echo "Installing lsc software from $BRANCHNAME branch."
#prefix=$LSCSOFT_ROOTDIR/$BRANCHNAME

cflags="-march=native -g"
if [[ -z $cc ]]; then
    # User didn't specify CC at command line.
    if [[ -x $(which clang) ]]; then
        cc=clang
    fi
fi

# Common flags to every configure process.
if [[ -z $flags ]]; then
    flags="--enable-swig-python --enable-mpi --disable-laldetchar"
fi

# Number of build processes.
if [[ -z $nprocs ]]; then
    nprocs=1
fi

# lscsoftrc location.
lscsoftrc=$prefix/etc/lscsoftrc

echo "Installing to $prefix"

make_c() {
    cd $srcdir

    echo "Building C modules from $srcdir"
    make distclean || true
    ./00boot
    ./configure --prefix=$prefix $flags CC="$cc" CFLAGS="$cflags"
    make -j $nprocs
    make install

    # Generate lscsoftrc.
    . $scriptdir/generate-rc $prefix $lscsoftrc
}

make_python() {
    [[ ! -f $lscsoftrc ]] && fail "Could not find $lscsoftrc"
    . $lscsoftrc

    echo "Building $srcdir/pylal"
    cd $srcdir/pylal
    rm -rf build
    python setup.py install --prefix=$prefix
    . $lscsoftrc

    echo "Building $srcdir/glue"
    cd $srcdir/glue
    rm -rf build
    python setup.py install --prefix=$prefix
    . $lscsoftrc
}

if [[ -z $buildc && -z $buildpython ]]; then
    # Build both.
    make_c
    make_python
else
    if [[ $buildc ]]; then
        make_c
    fi

    if [[ $buildpython ]]; then
        make_python
    fi
fi
